# Connect to Pi 5 
sshpass -p '115049' ssh wei@192.168.1.84

# Connect to the server 
ssh coder.Wu-ENGR895.main

# Train model on the server 
nohup yolo train data=data.yaml model=yolov8n.pt epochs=10 imgsz=640 batch=4 device=cpu > training.log 2>&1 &
tail -f training.log

# All on Mac - copy these 3 commands:
scp coder@coder-vscode.server3.sfsu-miclab.org--wei12f8158--Wu-ENGR895:/home/coder/ExoGlove-Merge/runs/detect/train5/weights/best.pt ~/Downloads/best_train5.pt
sshpass -p '115049' scp ~/Downloads/best_train5.pt wei@192.168.1.84:~/ExoGlove-YOLOv8/models/best_train5_$(date +%Y%m%d_%H%M%S).pt
rm ~/Downloads/best_train5.pt

# Navigate to project
cd ExoGlove-YOLOv8

# Activate environment
source exoglove_env/bin/activate

# Convert to onnx
python3 export_imx_pi.py --model models/best.pt --out best_imx_model

# Then create .rpk package
imx500-package -i best_imx_model/imx500_package.zip -o final_output


# ðŸŽ¯ EXOGLOVE DEPLOYMENT OPTIONS
source imx500env/bin/activate

# Direct Picamera2 Demo
cd ~/picamera2/examples/imx500
python3 exoglove_imx500_demo.py --model /home/wei/ExoGlove-YOLOv8/final_output/network.rpk --threshold 0.5
python3 imx500_object_detection_demo.py --model /home/wei/ExoGlove-YOLOv8/final_output/network.rpk --threshold 0.5
python3 imx500_object_detection_demo.py --model /home/wei/ExoGlove-YOLOv8/final_output/network.rpk --bbox-normalization --bbox-order xy


source imx500env/bin/activate

python3 ~/picamera2/examples/imx500/imx500_object_detection_demo.py \
  --model ~/sensorFusion/IMX500/yolov8n_imx_model/final_output/network.rpk \
  --labels ~/sensorFusion/IMX500/yolov8n_imx_model/labels.txt

python3 ~/picamera2/examples/imx500/imx500_object_detection_demo.py
--model /usr/share/imx500-models/imx500_network_nanodet_plus_416x416_pp.rpk