# Connect to Pi 5 
sshpass -p '115049' ssh wei@192.168.1.84

# Connect to the server 
ssh coder.Wu-ENGR895.main

# Train model on the server 
nohup yolo train data=data.yaml model=yolov8n.pt epochs=10 imgsz=640 batch=4 device=cpu > training.log 2>&1 &
tail -f training.log

# Navigate to project
cd ExoGlove-YOLOv8

# Activate environment
source exoglove_env/bin/activate

# Convert to onnx
python3 export_imx_pi.py --model models/best.pt --out best_imx_model

# Then create .rpk package
imx500-package -i best_imx_model/imx500_package.zip -o final_output


# ðŸŽ¯ EXOGLOVE DEPLOYMENT OPTIONS

# Option 1: Official Picamera2 Demo (RECOMMENDED)
cd ~/ExoGlove-YOLOv8
./run_exoglove_demo.sh

# Option 2: Direct Picamera2 Demo
cd ~/picamera2/examples/imx500
python3 exoglove_imx500_demo.py --model /home/wei/ExoGlove-YOLOv8/final_output/network.rpk --threshold 0.5
python3 imx500_object_detection_demo.py --model /home/wei/ExoGlove-YOLOv8/final_output/network.rpk --threshold 0.5
python3 imx500_object_detection_demo.py --model /home/wei/ExoGlove-YOLOv8/final_output/network.rpk --bbox-normalization --bbox-order xy

# Option 3: NPU with rpicam-vid
rpicam-vid --width 640 --height 640 --mode 2028:1520:10:U --post-process-file scripts/deployment/exoglove_imx500_config.json --output /tmp/exoglove_output.h264 --timeout 0

# Option 4: Python Picamera2
python3 scripts/deployment/exoglove_picamera2_complete.py

# ðŸŽ¯ DETECTS: apple, ball, bottle, clip, glove, lid, plate, spoon, tape spool
# Controls: Press Ctrl+C to quit