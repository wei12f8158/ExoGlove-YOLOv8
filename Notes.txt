# Connect to Pi 5 
sshpass -p '115049' ssh wei@192.168.1.84

# Connect to the server 
ssh coder.Wu-ENGR895.main

# Train model on the server 
nohup yolo train data=data.yaml model=yolov8n.pt epochs=10 imgsz=640 batch=4 device=cpu > training.log 2>&1 &
tail -f training.log

# All on Mac - copy these 3 commands:
scp coder@coder-vscode.server3.sfsu-miclab.org--wei12f8158--Wu-ENGR895:/home/coder/ExoGlove-Merge/runs/detect/train5/weights/best.pt ~/Downloads/best_train5.pt
sshpass -p '115049' scp ~/Downloads/best_train5.pt wei@192.168.1.84:~/ExoGlove-YOLOv8/models/best_train5_$(date +%Y%m%d_%H%M%S).pt
rm ~/Downloads/best_train5.pt

# Navigate to project
cd ExoGlove-YOLOv8

# Activate environment
source exoglove_env/bin/activate

# Convert to onnx
python3 export_imx_pi.py --model models/best.pt --out best_imx_model

# Then create .rpk package
imx500-package -i best_imx_model/imx500_package.zip -o final_output


# EXOGLOVE DEPLOYMENT OPTIONS
source imx500env/bin/activate

# Direct Picamera2 Demo
python3 ~/picamera2/examples/imx500/imx500_object_detection_demo.py \
  --model ~/ExoGlove-YOLOv8/final_output/network.rpk \
  --labels ~/ExoGlove-YOLOv8/final_output/labels.txt \
  --bbox-normalization \
  --bbox-order xy \
  --threshold 0.5

cd ~/ExoGlove-YOLOv8
python3 exoglove_imx500_with_recording.py \
  --model ~/ExoGlove-YOLOv8/final_output/network.rpk \
  --labels ~/ExoGlove-YOLOv8/final_output/labels.txt \
  --bbox-normalization \
  --bbox-order xy \
  --threshold 0.5 \
  --max-detections 10




(venv) wei@raspberrypi:~/ExoGlove-YOLOv8 $ python3 ~/picamera2/examples/imx500/imx500_object_detection_demo.py
Traceback (most recent call last):
  File "/home/wei/picamera2/examples/imx500/imx500_object_detection_demo.py", line 8, in <module>
    from picamera2 import MappedArray, Picamera2
  File "/usr/lib/python3/dist-packages/picamera2/__init__.py", line 11, in <module>
    from .picamera2 import Picamera2, Preview
  File "/usr/lib/python3/dist-packages/picamera2/picamera2.py", line 30, in <module>
    from picamera2.encoders import Encoder, H264Encoder, MJPEGEncoder, Quality
  File "/usr/lib/python3/dist-packages/picamera2/encoders/__init__.py", line 7, in <module>
    from .encoder import Encoder, Quality
  File "/usr/lib/python3/dist-packages/picamera2/encoders/encoder.py", line 13, in <module>
    from ..request import _MappedBuffer
  File "/usr/lib/python3/dist-packages/picamera2/request.py", line 13, in <module>
    import simplejpeg
  File "/usr/lib/python3/dist-packages/simplejpeg/__init__.py", line 1, in <module>
    from ._jpeg import encode_jpeg, encode_jpeg_yuv_planes
  File "simplejpeg/_jpeg.pyx", line 1, in init simplejpeg._jpeg
ValueError: numpy.dtype size changed, may indicate binary incompatibility. Expected 96 from C header, got 88 from PyObject
